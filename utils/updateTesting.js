import UpdateService from '../services/UpdateService';
import { Alert } from 'react-native';

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Å–∏—Å—Ç–µ–º–∏ –æ–Ω–æ–≤–ª–µ–Ω—å –≤ —Ä–µ–∂–∏–º—ñ —Ä–æ–∑—Ä–æ–±–∫–∏
export const testUpdateSystem = async () => {
  console.log('üîÑ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Å–∏—Å—Ç–µ–º–∏ –æ–Ω–æ–≤–ª–µ–Ω—å...');
  
  try {
    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤–µ—Ä—Å—ñ—ó
    const versionInfo = await UpdateService.getVersionInfo();
    console.log('üì± –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –≤–µ—Ä—Å—ñ—é:', versionInfo);
    
    if (__DEV__) {
      // –í —Ä–µ–∂–∏–º—ñ —Ä–æ–∑—Ä–æ–±–∫–∏ –ø–æ–∫–∞–∑—É—î–º–æ —Å–∏–º—É–ª—è—Ü—ñ—é
      console.log('üß™ –†–µ–∂–∏–º —Ä–æ–∑—Ä–æ–±–∫–∏ - —Å–∏–º—É–ª—è—Ü—ñ—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è');
      Alert.alert(
        '–¢–µ—Å—Ç –æ–Ω–æ–≤–ª–µ–Ω—å (–†–µ–∂–∏–º —Ä–æ–∑—Ä–æ–±–∫–∏)',
        `–°–∏—Å—Ç–µ–º–∞ –æ–Ω–æ–≤–ª–µ–Ω—å –ø—Ä–∞—Ü—é—î!\n\n–í–µ—Ä—Å—ñ—è: ${versionInfo.currentVersion}\n–ö–∞–Ω–∞–ª: ${versionInfo.channel}\n\n–í –ø—Ä–æ–¥–∞–∫—à–Ω —Ä–µ–∂–∏–º—ñ —Å–∏—Å—Ç–µ–º–∞ –±—É–¥–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –ø–µ—Ä–µ–≤—ñ—Ä—è—Ç–∏ —Ä–µ–∞–ª—å–Ω—ñ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è.`,
        [{ text: 'OK' }]
      );
      return true;
    }
    
    // –°–∏–º—É–ª—è—Ü—ñ—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –æ–Ω–æ–≤–ª–µ–Ω—å –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω
    console.log('üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω—å...');
    const update = await UpdateService.checkForUpdates(true);
    
    if (update) {
      console.log('‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è:', update);
      Alert.alert(
        '–¢–µ—Å—Ç –æ–Ω–æ–≤–ª–µ–Ω—å',
        '–°–∏—Å—Ç–µ–º–∞ –æ–Ω–æ–≤–ª–µ–Ω—å –ø—Ä–∞—Ü—é—î! –ó–Ω–∞–π–¥–µ–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è.',
        [{ text: 'OK' }]
      );
    } else {
      console.log('‚ÑπÔ∏è –û–Ω–æ–≤–ª–µ–Ω—å –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
      Alert.alert(
        '–¢–µ—Å—Ç –æ–Ω–æ–≤–ª–µ–Ω—å',
        '–°–∏—Å—Ç–µ–º–∞ –æ–Ω–æ–≤–ª–µ–Ω—å –ø—Ä–∞—Ü—é—î! –û–Ω–æ–≤–ª–µ–Ω—å –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.',
        [{ text: 'OK' }]
      );
    }
    
    return true;
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è:', error);
    Alert.alert(
      '–ü–æ–º–∏–ª–∫–∞ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è',
      `–ü–æ–º–∏–ª–∫–∞: ${error.message}`,
      [{ text: 'OK' }]
    );
    return false;
  }
};

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å–∏–º—É–ª—è—Ü—ñ—ó –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
export const simulateUpdate = () => {
  Alert.alert(
    '–°–∏–º—É–ª—è—Ü—ñ—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è',
    '–î–æ—Å—Ç—É–ø–Ω–µ –Ω–æ–≤–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è! –ë–∞–∂–∞—î—Ç–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏?',
    [
      { text: '–ü—ñ–∑–Ω—ñ—à–µ', style: 'cancel' },
      { 
        text: '–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏', 
        onPress: () => {
          Alert.alert(
            '–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è',
            '–û–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î—Ç—å—Å—è... (—Å–∏–º—É–ª—è—Ü—ñ—è)',
            [{ text: 'OK' }]
          );
        }
      }
    ]
  );
};

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
export const checkUpdateConfiguration = () => {
  const config = {
    updatesEnabled: UpdateService.isUpdateAvailable(),
    isDevelopment: __DEV__,
    platform: require('react-native').Platform.OS,
  };
  
  console.log('‚öôÔ∏è –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –æ–Ω–æ–≤–ª–µ–Ω—å:', config);
  
  Alert.alert(
    '–ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –æ–Ω–æ–≤–ª–µ–Ω—å',
    `–û–Ω–æ–≤–ª–µ–Ω–Ω—è —É–≤—ñ–º–∫–Ω–µ–Ω—ñ: ${config.updatesEnabled ? '–¢–∞–∫' : '–ù—ñ'}\n` +
    `–†–µ–∂–∏–º —Ä–æ–∑—Ä–æ–±–∫–∏: ${config.isDevelopment ? '–¢–∞–∫' : '–ù—ñ'}\n` +
    `–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: ${config.platform}`,
    [{ text: 'OK' }]
  );
  
  return config;
};
